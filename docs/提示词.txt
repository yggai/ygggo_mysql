我想要打造一个开源的，go语言的，MySQL的底层库，具备连接池，便捷生成SQL语句，内存型MySQL便于测试等MySQL基础的，核心的功能，你作为专业的产品经理，帮我写一份需求分析文档

修改 docs/需求分析.md 生成一篇专业的需求分析文档

这个需求分析大错特错。我们要做的是一个MySQL的通用的底层框架，基于MySQL驱动，MySQL数据库连接池，内存型MySQL等。提供便捷的MySQL测试工具，高效的MySQL查询方法，简易的MySQL基于连接池自动管理的连接对象。基于我的要求，重新写一份 docs/需求分析.md 文档，原来的我帮你删除了。

现在，我需要你联网搜索最新的资料，核心是从github上面查找，有哪些已有的go语言的开源项目，能够支撑我们做完成当前项目。我们要站在巨人的肩膀上，尽量避免重复造轮子。你把调研的结果，写入 docs/技术调研.md

你作为专业的Go语言架构师，根据已有的需求分析文档和技术调用文档，写一份 docs/开发计划.md 文档。我们的项目名叫做 ygggo_mysql，项目地址是 github.com/yggai/ygggo_mysql 作者是 源滚滚，整体要遵循TDD的开发规范。

接下来，你作为专业的架构师，填充完善一下 docs/项目结构设计.md ，我期望的是一种扁平化的结构，代码尽量放到项目目录下，不要有嵌套的目录结构，因为这样更有利于其他人使用的时候，能直接通过我们的 github.com/yggai/ygggo_mysql 就使用到我们这个库的所有功能。

参考 docs/项目结构设计.md 先把整体的项目结构搭建起来，便于后续开发。你现在只需要把文件创建出来就行，不要写代码，代码后续我们会继续TDD的方式慢慢开发。你现在先把结构创建出来，有基本的占位的代码，防止项目报错就行。

接下来，以TDD的方式，对配置先做完善。配置的DSN，除了这种直接传一个字符串进来。我们还应该支持具体的配置，比如传host，port，username，password，database等等。另外，需要对密码做特殊的处理，要兼容一些密码中包含特殊符号的情况，比如%￥@等等。要做详尽的测试。

支持基于环境变量的配置。采用约定大于配置的形式。假设环境变量中有 YGGGO_MYSQL_字段，比如YGGGO_MYSQL_HOST 等等，如果环境变量中有配置，则优先使用环境变量中的配置。这样的话，我们后面使用起来会更简单，因为使用者只需要配置了环境变量，就不需要关心调用方法的时候如何传参了。

